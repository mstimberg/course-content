name: publish-book

on: 

  workflow_dispatch:

env:
  NB_KERNEL: python
  NMA_REPO: course-content
  NMA_MAIN_BRANCH: main

# This job installs dependencies, build the book, and pushes it to `gh-pages`
jobs:
  build-and-deploy-book:
    runs-on: ubuntu-latest
    steps:

      - name: Checkout
        uses: actions/checkout@v3
        with:
          persist-credentials: false
          submodules: true
          ref: ${{ github.head_ref }}
          
      - name: Get commit message
        run: |
          readonly local msg=$(git log -1 --pretty=format:"%s")
          echo "COMMIT_MESSAGE=$msg" >> $GITHUB_ENV

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Upgrade pip
        run:
          python -m pip install --upgrade pip

      - name: Copy tutorials from precourse repo
        if: "!contains(env.COMMIT_MESSAGE, 'skip precourse')"
        run: |
          BRANCH=`python -c 'import os, re; m = re.search(r"precourse:([\w-]+)", os.environ["COMMIT_MESSAGE"]); print("main" if m is None else m.group(1))'`
          wget https://github.com/NeuromatchAcademy/precourse/archive/refs/heads/$BRANCH.tar.gz
          tar -xzf $BRANCH.tar.gz
          mv precourse-$BRANCH/tutorials/W0D* tutorials/
          cat precourse-main/tutorials/materials.yml tutorials/materials.yml > out.yml
          mv out.yml tutorials/materials.yml
          mv precourse-$BRANCH/prereqs .
          rm -r precourse-$BRANCH
          rm -r $BRANCH.tar.gz

      - name: Prepare student book
        run: |
          python -m venv nmaci/venv
          source nmaci/venv/bin/activate
          python -m pip install -r nmaci/requirements.txt
          python ci/generate_book.py student
          ln -s ../tutorials book/tutorials
          ln -s ../projects book/projects
          ln -s ../prereqs book/prereqs

      - name: Run jupyter notebooks
        run: |
            export NOTEBOOKS=$(grep ipynb book/_toc.yml | python -c 'import sys;print(" ".join(["book/" + l.strip().split("- file: ")[1] for l in sys.stdin]))')
            python -m venv venv
            source venv/bin/activate
            python -m pip install -r requirements.txt
            python -m pip install nbconvert jupyter-client==7.3.5
            for notebook in $NOTEBOOKS; do
                if [[ -f "$notebook" ]]; then
                  jupyter nbconvert --to notebook --execute --inplace \
                    --ExecutePreprocessor.timeout=14400 \
                    --allow-errors \
                    $notebook
                else
                  echo "$notebook does not exist!"
                fi
            done
        env:
          PYDEVD_DISABLE_FILE_VALIDATION: 1

      - name: Build jupyter book
        run: |
          NOTEBOOKS=$(grep -- "- file:" book/_toc.yml | python -c 'import sys;print(" ".join(["book/" + l.strip().split("- file: ")[1] for l in sys.stdin]))')
          python -m venv nmaci/venv
          python ci/process_notebooks.py --check-execution $NOTEBOOKS
          jupyter-book build book
          python ci/parse_html_for_errors.py student

      - name: Commit book
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          ghp-import -n -c "compneuro.neuromatch.io" -m "Update course book" book/_build/html
          git checkout -f gh-pages

      - name: Publish to gh-pages
        uses: ad-m/github-push-action@v0.6.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: gh-pages
          force: true
